ggtitle("Side-by-side Box Plot of Length by Sex") # Add title
library(ggplot2)
ggplot(
data = df,
mapping = aes(x = sex, y = diameter)
) +
geom_violin(fill = "cornflowerblue") +
theme_bw() +
ylab("Diameter") +
xlab("Sex") +
theme(
text = element_text(size = 12)
) +
ggtitle("Side-by-side Violin Plot of Diamaeter by Sex")
library(ggplot2)
G <- ggplot(
data = df,
mapping = aes(x=length, y=diameter, shape=sex, color=sex, size=shell_weight)
) +
geom_point()
scale_size_continuous(range = c(1,10))
G + ylab("Diamter") +
xlab("Length") +
theme(
text = element_text(size = 12)
) +
ggtitle("Scatter plot of Diameter by Length")
library(ggplot2)
ggplot(
data = df,
aes(x = length, y = diameter)) +
geom_point(aes(color = sex)) +
geom_smooth(aes(group = sex), method = "lm") +
facet_wrap(~ sex, ncol = 1) +
ylab("Diameter") +
xlab("Length") +
theme(
text = element_text(size = 12)) +
ggtitle("Scatter Plot of Length and Diameter by Sex with a linear trend")
# Filtering that data to include a length of atleast 0.5 meters.
df %>%
filter(length >= 0.5) %>%
group_by_(sex) %>%
summarise_all(mean)
# Filtering that data to include a length of atleast 0.5 meters.
df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
# Filtering that data to include a length of atleast 0.5 meters.
df_filtered <- df %>% filter(length >= 0.5)
# Group by sex and calculate mean of each variable
df_grouped <- df_filtered %>%
group_by(sex) %>%
summarise_all(mean)
# Filtering that data to include a length of atleast 0.5 meters.
df_filtered <- df %>% filter(length >= 0.5)
# Group by sex and calculate mean of each variable
df_grouped <- df_filtered %>%
group_by(sex) %>%
summarise_all(mean)
# Filtering that data to include a length of atleast 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
# Creating a bar plot to visualize the mean values for each
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped,
mapping = aes(x = sex)
) +
geom_bar(aes(y = length)) +
geom_bar(aes(y = diameter)) +
geom_bar(aes(y = height)) +
geom_bar(aes(y = whole_weigth)) +
geom_bar(aes(y = shucked_weigth)) +
geom_bar(aes(y = viscera_weigth)) +
geom_bar(aes(y = shell_weigth)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped,
mapping = aes(x = sex)
) +
geom_bar(aes(y = length)) +
geom_bar(aes(y = diameter)) +
geom_bar(aes(y = height)) +
geom_bar(aes(y = whole_weight)) +
geom_bar(aes(y = shucked_weigth)) +
geom_bar(aes(y = viscera_weigth)) +
geom_bar(aes(y = shell_weigth)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped,
mapping = aes(x = sex)
) +
geom_bar(aes(y = length)) +
geom_bar(aes(y = diameter)) +
geom_bar(aes(y = height)) +
geom_bar(aes(y = whole_weight)) +
geom_bar(aes(y = shucked_weight)) +
geom_bar(aes(y = viscera_weight)) +
geom_bar(aes(y = shell_weight)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped,
aes(x = sex)
) +
geom_bar(aes(y = length)) +
geom_bar(aes(y = diameter)) +
geom_bar(aes(y = height)) +
geom_bar(aes(y = whole_weight)) +
geom_bar(aes(y = shucked_weight)) +
geom_bar(aes(y = viscera_weight)) +
geom_bar(aes(y = shell_weight)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
# Filter the data
df_filtered <- df %>% filter(length >= 0.5)
# Group by sex and calculate mean of each variable
df_grouped <- df_filtered %>%
group_by(sex) %>%
summarise_all(mean)
# Create bar plot
ggplot(df_grouped, aes(x = sex)) +
geom_col(aes(y = length, fill = sex)) +
geom_col(aes(y = diameter, fill = sex)) +
geom_col(aes(y = height, fill = sex)) +
geom_col(aes(y = whole_weight, fill = sex)) +
geom_col(aes(y = shucked_weight, fill = sex)) +
geom_col(aes(y = viscera_weight, fill = sex)) +
geom_col(aes(y = shell_weight, fill = sex)) +
labs(y = "Mean Value") +
scale_fill_manual(values = c("#F8766D", "#00BFC4", "#619CFF")) +
theme(legend.position = "none")
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped,
mapping = aes(x = sex)
) +
geom_bar(aes(y = length, fill = sex)) +
geom_bar(aes(y = diameter, fill = sex)) +
geom_bar(aes(y = height, fill = sex)) +
geom_bar(aes(y = whole_weight, fill = sex)) +
geom_bar(aes(y = shucked_weight, fill = sex)) +
geom_bar(aes(y = viscera_weight, fill = sex)) +
geom_bar(aes(y = shell_weight, fill = sex)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped,
aes(x = sex)
) +
geom_bar(aes(y = length, fill = sex)) +
geom_bar(aes(y = diameter, fill = sex)) +
geom_bar(aes(y = height, fill = sex)) +
geom_bar(aes(y = whole_weight, fill = sex)) +
geom_bar(aes(y = shucked_weight, fill = sex)) +
geom_bar(aes(y = viscera_weight, fill = sex)) +
geom_bar(aes(y = shell_weight, fill = sex)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped,
aes(x = sex)
) +
geom_bar(aes(y = length, x = sex, fill = sex)) +
geom_bar(aes(y = diameter,x = sex, fill = sex)) +
geom_bar(aes(y = height,x = sex, fill = sex)) +
geom_bar(aes(y = whole_weight,x = sex, fill = sex)) +
geom_bar(aes(y = shucked_weight,x = sex, fill = sex)) +
geom_bar(aes(y = viscera_weight,x = sex, fill = sex)) +
geom_bar(aes(y = shell_weight,x = sex, fill = sex)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped
) +
geom_bar(aes(y = length, x = sex, fill = sex)) +
geom_bar(aes(y = diameter,x = sex, fill = sex)) +
geom_bar(aes(y = height,x = sex, fill = sex)) +
geom_bar(aes(y = whole_weight,x = sex, fill = sex)) +
geom_bar(aes(y = shucked_weight,x = sex, fill = sex)) +
geom_bar(aes(y = viscera_weight,x = sex, fill = sex)) +
geom_bar(aes(y = shell_weight,x = sex, fill = sex)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped,
aes(x = sex))
+
geom_bar(aes(x = sex, y = length, fill = sex)) +
geom_bar(aes(x = sex, y = diamete, fill = sex)) +
geom_bar(aes(x = sex, y = height, fill = sex)) +
geom_bar(aes(x = sex, y = whole_weight, fill = sex)) +
geom_bar(aes(x = sex, y = shucked_weigh, fill = sex)) +
geom_bar(aes(x = sex, y = viscera_weight, fill = sex)) +
geom_bar(aes(x = sex, y = shell_weight, fill = sex)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped,
aes(x = sex)) +
geom_bar(aes(x = sex, y = length, fill = sex)) +
geom_bar(aes(x = sex, y = diamete, fill = sex)) +
geom_bar(aes(x = sex, y = height, fill = sex)) +
geom_bar(aes(x = sex, y = whole_weight, fill = sex)) +
geom_bar(aes(x = sex, y = shucked_weigh, fill = sex)) +
geom_bar(aes(x = sex, y = viscera_weight, fill = sex)) +
geom_bar(aes(x = sex, y = shell_weight, fill = sex)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped,
aes(x = sex)) +
geom_bar(aes(x = sex, y = length, fill = sex)) +
geom_bar(aes(x = sex, y = diameter, fill = sex)) +
geom_bar(aes(x = sex, y = height, fill = sex)) +
geom_bar(aes(x = sex, y = whole_weight, fill = sex)) +
geom_bar(aes(x = sex, y = shucked_weight, fill = sex)) +
geom_bar(aes(x = sex, y = viscera_weight, fill = sex)) +
geom_bar(aes(x = sex, y = shell_weight, fill = sex)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped,
aes(x = sex)) +
geom_col(aes(x = sex, y = length, fill = sex)) +
geom_col(aes(x = sex, y = diameter, fill = sex)) +
geom_col(aes(x = sex, y = height, fill = sex)) +
geom_col(aes(x = sex, y = whole_weight, fill = sex)) +
geom_col(aes(x = sex, y = shucked_weight, fill = sex)) +
geom_col(aes(x = sex, y = viscera_weight, fill = sex)) +
geom_col(aes(x = sex, y = shell_weight, fill = sex)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped) +
geom_col(aes(x = sex, y = length, fill = sex)) +
geom_col(aes(x = sex, y = diameter, fill = sex)) +
geom_col(aes(x = sex, y = height, fill = sex)) +
geom_col(aes(x = sex, y = whole_weight, fill = sex)) +
geom_col(aes(x = sex, y = shucked_weight, fill = sex)) +
geom_col(aes(x = sex, y = viscera_weight, fill = sex)) +
geom_col(aes(x = sex, y = shell_weight, fill = sex)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped) +
geom_col(aes(x = sex, y = length, fill = sex)) +
geom_col(aes(x = sex, y = diameter, fill = sex)) +
geom_col(aes(x = sex, y = height, fill = sex)) +
geom_col(aes(x = sex, y = whole_weight, fill = sex)) +
geom_col(aes(x = sex, y = shucked_weight, fill = sex)) +
geom_col(aes(x = sex, y = viscera_weight, fill = sex)) +
geom_col(aes(x = sex, y = shell_weight, fill = sex)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("    Bar Plot")
# Filtering that data to include a length of at least 0.5 meters.
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped) +
geom_col(aes(x = sex, y = length, fill = sex)) +
geom_col(aes(x = sex, y = diameter, fill = sex)) +
geom_col(aes(x = sex, y = height, fill = sex)) +
geom_col(aes(x = sex, y = whole_weight, fill = sex)) +
geom_col(aes(x = sex, y = shucked_weight, fill = sex)) +
geom_col(aes(x = sex, y = viscera_weight, fill = sex)) +
geom_col(aes(x = sex, y = shell_weight, fill = sex)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
df_filtered_grouped <- df %>%
filter(length >= 0.5) %>%
group_by(sex) %>%
summarise_all(mean)
df_filtered_grouped
# Creating a bar plot to visualize the mean values for each variable by `sex`
ggplot(
data = df_filtered_grouped) +
barplot(aes(x = sex, y = length, fill = sex)) +
barplot(aes(x = sex, y = diameter, fill = sex)) +
barplot(aes(x = sex, y = height, fill = sex)) +
barplot(aes(x = sex, y = whole_weight, fill = sex)) +
barplot(aes(x = sex, y = shucked_weight, fill = sex)) +
barplot(aes(x = sex, y = viscera_weight, fill = sex)) +
barplot(aes(x = sex, y = shell_weight, fill = sex)) +
ylab("Mean Value") +
theme(
text = element_text(size = 12)
) +
ggtitle("Bar Plot")
foo = function(input){
val = input^2 + 3
return(val)
}
View(foo)
View(foo)
function(5)
function(input = 5)
foo(5)
5
foo(5)
dat = rbinom(n = 100, size = 1, prob = 0.3)
# log-likelihood for p
my_logLik = function(p, dat){
n = length(dat)
val = sum(dat) * log(p) + (n - sum(dat) * log(1-p))
}
mean(dat)
my_logLik(0.1, dat)
View(my_logLik)
my_logLik(0.1, dat)
my_logLik(0.41, dat)
my_logLik = function(p, dat){
n = length(dat)
val = sum(dat) * log(p) + (n - sum(dat) * log(1-p))
return(val)
mean(dat)
mean(dat)
dat = rbinom(n = 100, size = 1, prob = 0.3)
mean(dat)
dat = rbinom(n = 100, size = 1, prob = 0.3)
# log-likelihood for p
my_logLik = function(p, dat){
n = length(dat)
val = sum(dat) * log(p) + (n - sum(dat) * log(1-p))
return(val)
mean(dat)
my_logLik(0.1, dat)
my_logLik = function(p, dat){
n = length(dat)
val = sum(dat) * log(p) + (n - sum(dat) * log(1-p))
return(val)
}
mean(dat)
mean(dat)
dat = rbinom(n = 100, size = 1, prob = 0.3)
# log-likelihood for p
my_logLik = function(p, dat){
n = length(dat)
val = sum(dat) * log(p) + (n-sum(dat)) * log(1 - p)
return(val)
}
mean(dat)
dat = rbinom(n = 100, size = 1, prob = 0.3)
# log-likelihood for p
my_logLik = function(p, dat){
n = length(dat)
val = sum(dat) * log(p) + (n-sum(dat)) * log(1 - p)
return(val)
}
mean(dat)
df %>%
mutate(num_rings = if(rings < 10, "low",
df %>%
mutate(num_rings = if(rings < 10, "low")
